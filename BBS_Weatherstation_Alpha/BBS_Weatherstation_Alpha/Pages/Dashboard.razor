@using BBS_Weatherstation_SeriesA.Data.Global
@using Radzen.Blazor
@page "/dashboard"

<MudGrid>
    <MudItem xs="12" >
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudSelect T="string" Label="Daten" AnchorOrigin="Origin.BottomCenter">
                <MudSelectItem Value="@("all")" />
                @foreach(string measurement in Cache.Measurements)
                {
                    <MudSelectItem Disabled="true" Value="@(measurement)" />
                }
            </MudSelect>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" >
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
                <MudButton OnClick=@(() => timespan = "today" )>Heute</MudButton>
                <MudButton OnClick=@(() => timespan = "yesterday" )>Gestern</MudButton>
                <MudButton OnClick=@(() => timespan = "week" )>1 Woche</MudButton>
                <MudButton OnClick=@(() => timespan = "month" )>1 Monat</MudButton>
                <MudButton OnClick=@(() => timespan = "year" )>1 Jahr</MudButton>
                <MudButton>Alle</MudButton>
            </MudButtonGroup>
            <MudSpacer />
            <MudSwitch UnCheckedColor="Color.Error" Color="Color.Default" Label="Debug" @bind-Checked="@_debug" />
        </MudPaper>
    </MudItem>
    <MudHidden Invert="@_debug">
        <MudItem xs="12" sm="12">
            <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
                <MudText Typo="Typo.h6">Debug</MudText>
                <label></label>
            </MudPaper>
        </MudItem>
    </MudHidden>

    @foreach (Cache.DataList item in localData)
    {    
    <MudItem xs="12">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">
            <div class="col-sm-12 my-5"> 
                <RadzenChart @ref="radzenChart">
                    <RadzenLineSeries Data="@item.dataObjects.ToArray()" ValueProperty="value" CategoryProperty="timestamp" Title="@item.topic" >
                        <RadzenMarkers MarkerType="MarkerType.Square" />
                    </RadzenLineSeries>
                </RadzenChart>
            </div>
        </MudPaper>
    </MudItem>
    }
</MudGrid>

@code {
    RadzenChart radzenChart = new();

    List<Cache.DataList> localData = Cache.Data;

    private string timespan;

    private bool _debug { get; set; } = true;

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        localData = Cache.Data;
        radzenChart.Reload();
    }

}



